package com.acme.homework_pam_sebastian_morales;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import org.kie.api.runtime.process.ProcessWorkItemHandlerException;
import org.kie.api.runtime.process.ProcessWorkItemHandlerException.HandlingStrategy;
import org.kie.api.runtime.process.WorkItem;
import org.kie.api.runtime.process.WorkItemHandler;
import org.kie.api.runtime.process.WorkItemManager;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class CheckStatusWIH implements WorkItemHandler {
	
	/*
	 * Posibles estados 
	 aprobado
	pendiente 
	denegado
	 */
	//Se agrega la probabilidad de que 80% sea pendiente, 20% sea aprobado, 20% sea denegado
	String[] arrayEstados={"PENDIENTE","PENDIENTE","PENDIENTE","PENDIENTE","PENDIENTE","PENDIENTE","PENDIENTE","PENDIENTE","APROBADO","APROBADO", "DENEGADO","DENEGADO"};
	static final long serialVersionUID = 1L;

	public CheckStatusWIH() {
	}

	@Override
	public void executeWorkItem(WorkItem workItem, WorkItemManager manager) {
		System.out
				.println("Checkear estado de las solicitudes");
		
		
		String aprobadoFederacion = (String) workItem.getParameter("aprobadoFederacion");
		if(aprobadoFederacion == null || aprobadoFederacion.equalsIgnoreCase("PENDIENTE")) {
			aprobadoFederacion = verificarFederecionElectrica();
		}
		String aprobadoProteccionCivil = (String) workItem.getParameter("aprobadoProteccionCivil");	
		if(aprobadoProteccionCivil == null || aprobadoProteccionCivil.equalsIgnoreCase("PENDIENTE")) {
			aprobadoProteccionCivil = verificarProteccionCivil();
		}		
		
		Map<String, Object> results = new HashMap<String, Object>();
		results.put("aprobadoFederacion", aprobadoFederacion);
		results.put("aprobadoProteccionCivil", aprobadoProteccionCivil);
		
		System.out.println("Aprobado Federacion " + aprobadoFederacion);
		System.out.println("Aprobado Proteccion Civil " + aprobadoProteccionCivil);
		
		if(aprobadoFederacion.equalsIgnoreCase("DENEGADO") || aprobadoProteccionCivil.equalsIgnoreCase("DENEGADO")) {		
			System.out.println("Solicitud DENEGADO");
			results.put("estado", "DENEGADO");
			manager.completeWorkItem(workItem.getId(), results);
		}else {
			if(aprobadoFederacion.equalsIgnoreCase("PENDIENTE") || aprobadoProteccionCivil.equalsIgnoreCase("PENDIENTE")) {
				System.out.println("Solicitud PENDIENTE");
				results.put("estado", "PENDIENTE");
				manager.completeWorkItem(workItem.getId(), results);
			}
			
			if(aprobadoFederacion.equalsIgnoreCase("APROBADO") && aprobadoProteccionCivil.equalsIgnoreCase("APROBADO")) {
				System.out.println("Solicitud APROBADO");
				results.put("estado", "APROBADO");
				manager.completeWorkItem(workItem.getId(), results);
			}
		}			
	}

	@Override
	public void abortWorkItem(WorkItem workItem, WorkItemManager manager) {

	}
	
	private String verificarProteccionCivil() {
		Random r=new Random();
        int randomNumber=r.nextInt(arrayEstados.length);
        return arrayEstados[randomNumber];		
	}
	
	private String verificarFederecionElectrica() {
		Random r=new Random();
        int randomNumber=r.nextInt(arrayEstados.length);
        return arrayEstados[randomNumber];
	}

}